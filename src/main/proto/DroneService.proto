syntax = "proto3"; // No need to specify required or optional with proto3
package com.smartcitydrone.droneservice;

// Request payload
// No need to share drone battery level since we assume it's 100% when first joining network
message JoinRequest {
  // Each message attribute is strongly typed.
  // You also must assign a "tag" number.
  // Each tag number is unique within the message.
  int32 droneID = 1;
  string ipAddress = 2;
  int32 port = 3;
  int32 dronePositionX = 4;
  int32 dronePositionY = 5;
}

// Response received from the other drones already active inside the network
// The drone needs to know who is the master and its place inside the ring
// The drone may join during an election (master offline)
message JoinResponse {
  int32 droneID = 1;
  int32 dronePositionX = 2;
  int32 dronePositionY = 3;
  bool isMaster = 4;
  bool isElecting = 5;
}

// Defining a Service, a Service can have multiple RPC operations
service DroneService {
  rpc join(JoinRequest) returns (JoinResponse);

}